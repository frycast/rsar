cube_ncols = cube_attr$ncols,
cube_nrows = cube_attr$nrows,
cube_crs = cube_attr$crs,
cube_names = names(b))
source('D:/GDrive/YSync/PhD/6_Collaborations/rsar/R/reshape_tif.R', echo=TRUE)
library(rsar)
t <- load_SAR_matrix(filename)
class(t)
attributes(t)
library(rsar)
?brick_to_matrix
sample
dim(sample)
library(rsar)
usethis::use_testthat()
usethis::use_test()
sample
matrix(c(1,2,2))
names(matrix(c(1,2,2)))
crs(sample)
extent(sample)
str(extent)
?raster::extent
raster::extent()
raster::extent(raster())
zeros
t <- structure(1, class = "thing")
class(t)
#' @param m
#' @param extent
#' @param crs
#' @param dim
#' @param names
#'
#' @return
#' @export
#'
#' @examples
SAR_matrix <- function(
m = matrix(0, 3, 3), extent = raster::extent(raster::raster()),
crs = "+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0",
dim = c(dim(m),1), names = names(m)) {
m <- structure(
m, class = c("SAR_matrix", class(m)),
brick_extent = extent,
brick_crs = crs,
brick_dim = dim,
brick_names = names)
return(m)
}
SAR_matrix()
#' @param m
#' @param extent
#' @param crs
#' @param dim
#' @param names
#'
#' @return
#' @export
#'
#' @examples
SAR_matrix <- function(
m = matrix(0, 3, 3), brick_extent = raster::extent(raster::raster()),
crs = "+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0",
dim = c(dim(m),1), names = names(m)) {
m <- structure(
m, class = c("SAR_matrix", class(m)),
brick_extent = brick_extent,
brick_crs = crs,
brick_dim = dim,
brick_names = names)
return(m)
}
SAR_matrix()
raster::extent(raster::raster())
class(raster::extent(raster::raster()))
#' @param m
#' @param extent
#' @param crs
#' @param dim
#' @param names
#'
#' @return
#' @export
#'
#' @examples
SAR_matrix <- function(
m = matrix(0, 3, 3), extent,
crs = "+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0",
dim = c(dim(m),1), names = names(m)) {
if (missing(extent)) extent <- raster::extent(raster::raster())
m <- structure(
m, class = c("SAR_matrix", class(m)),
brick_extent = brick_extent,
brick_crs = crs,
brick_dim = dim,
brick_names = names)
return(m)
}
SAR_matrix()
#' @param m
#' @param extent
#' @param crs
#' @param dim
#' @param names
#'
#' @return
#' @export
#'
#' @examples
SAR_matrix <- function(
m = matrix(0, 3, 3), extent,
crs = "+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0",
dim = c(dim(m),1), names = names(m)) {
if (missing(extent)) extent <- raster::extent(raster::raster())
m <- structure(
m, class = c("SAR_matrix", class(m)),
brick_extent = extent,
brick_crs = crs,
brick_dim = dim,
brick_names = names)
return(m)
}
SAR_matrix()
#' @param m
#' @param extent
#' @param crs
#' @param dim
#' @param names
#'
#' @return
#' @export
#'
#' @examples
SAR_matrix <- function(
m = matrix(0, 3, 3), extent,
crs = "+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0",
dim = c(dim(m),1), names = names(m)) {
if (missing(extent)) extent <- raster::extent(raster::raster())
#  m <- structure(
#    m, class = c("SAR_matrix", class(m)),
#    brick_extent = extent,
#    brick_crs = crs,
#    brick_dim = dim,
#    brick_names = names)
m <- structure(
m, class = c("SAR_matrix", class(m)))
return(m)
}
SAR_matrix()
#' @param m
#' @param extent
#' @param crs
#' @param dim
#' @param names
#'
#' @return
#' @export
#'
#' @examples
SAR_matrix <- function(
m = matrix(0, 3, 3), extent,
crs = "+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0",
dim = c(dim(m),1), names = names(m)) {
if (missing(extent)) extent <- raster::extent(raster::raster())
#  m <- structure(
#    m, class = c("SAR_matrix", class(m)),
#    brick_extent = extent,
#    brick_crs = crs,
#    brick_dim = dim,
#    brick_names = names)
m <- structure(
m, class = c("SAR_matrix", class(m)),
brick_extent = extent)
return(m)
}
SAR_matrix()
#' @param m
#' @param extent
#' @param crs
#' @param dim
#' @param names
#'
#' @return
#' @export
#'
#' @examples
SAR_matrix <- function(
m = matrix(0, 3, 3), extent,
crs = "+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0",
dim = c(dim(m),1), names = names(m)) {
if (missing(extent)) extent <- raster::extent(raster::raster())
#  m <- structure(
#    m, class = c("SAR_matrix", class(m)),
#    brick_extent = extent,
#    brick_crs = crs,
#    brick_dim = dim,
#    brick_names = names)
m <- structure(
m, class = c("SAR_matrix", class(m)),
brick_extent = extent,
brick_crs = crs)
return(m)
}
SAR_matrix()
#' @param m
#' @param extent
#' @param crs
#' @param dim
#' @param names
#'
#' @return
#' @export
#'
#' @examples
SAR_matrix <- function(
m = matrix(0, 3, 3), extent = raster::extent(raster::raster()),
crs = "+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0",
dim = c(dim(m),1), names = names(m)) {
#  m <- structure(
#    m, class = c("SAR_matrix", class(m)),
#    brick_extent = extent,
#    brick_crs = crs,
#    brick_dim = dim,
#    brick_names = names)
m <- structure(
m, class = c("SAR_matrix", class(m)),
brick_extent = extent,
brick_crs = crs)
return(m)
}
SAR_matrix()
#' @param m
#' @param extent
#' @param crs
#' @param dim
#' @param names
#'
#' @return
#' @export
#'
#' @examples
SAR_matrix <- function(
m = matrix(0, 3, 3), extent = raster::extent(raster::raster()),
crs = "+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0",
dim = c(dim(m),1), names = names(m)) {
#  m <- structure(
#    m, class = c("SAR_matrix", class(m)),
#    brick_extent = extent,
#    brick_crs = crs,
#    brick_dim = dim,
#    brick_names = names)
m <- structure(
m, class = c("SAR_matrix", class(m)),
brick_extent = extent,
brick_crs = crs,
brick_dim = dim)
return(m)
}
SAR_matrix()
#' @param m
#' @param extent
#' @param crs
#' @param dim
#' @param names
#'
#' @return
#' @export
#'
#' @examples
SAR_matrix <- function(
m = matrix(0, 3, 3), extent = raster::extent(raster::raster()),
crs = "+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0",
brick_dim = c(dim(m),1), names = names(m)) {
#  m <- structure(
#    m, class = c("SAR_matrix", class(m)),
#    brick_extent = extent,
#    brick_crs = crs,
#    brick_dim = dim,
#    brick_names = names)
m <- structure(
m, class = c("SAR_matrix", class(m)),
brick_extent = extent,
brick_crs = crs,
brick_dim = brick_dim)
return(m)
}
SAR_matrix()
#' @param m
#' @param extent
#' @param crs
#' @param dim
#' @param names
#'
#' @return
#' @export
#'
#' @examples
SAR_matrix <- function(
m = matrix(0, 3, 3), extent = raster::extent(raster::raster()),
crs = "+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0",
brick_dim = c(dim(m),1), names = names(m)) {
#  m <- structure(
#    m, class = c("SAR_matrix", class(m)),
#    brick_extent = extent,
#    brick_crs = crs,
#    brick_dim = dim,
#    brick_names = names)
m <- structure(
m, class = c("SAR_matrix", class(m)),
brick_extent = extent,
brick_crs = crs,
brick_dim = brick_dim,
brick_names = names)
return(m)
}
SAR_matrix()
#' @param m
#' @param extent
#' @param crs
#' @param dim
#' @param names
#'
#' @return
#' @export
#'
#' @examples
SAR_matrix <- function(
m = matrix(0, 3, 3), extent = raster::extent(raster::raster()),
crs = "+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0",
brick_dim = c(dim(m),1), names) {
if (missing(names)) brick_names <- names(m)
#  m <- structure(
#    m, class = c("SAR_matrix", class(m)),
#    brick_extent = extent,
#    brick_crs = crs,
#    brick_dim = dim,
#    brick_names = names)
m <- structure(
m, class = c("SAR_matrix", class(m)),
brick_extent = extent,
brick_crs = crs,
brick_dim = brick_dim,
brick_names = brick_names)
return(m)
}
SAR_matrix()
#' @param m
#' @param extent
#' @param crs
#' @param dim
#' @param names
#'
#' @return
#' @export
#'
#' @examples
SAR_matrix <- function(
m = matrix(0, 3, 3), extent = raster::extent(raster::raster()),
crs = "+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0",
brick_dim = c(dim(m),1), names) {
if ( missing(names) ) {brick_names <- names(m)}
m <- structure(
m, class = c("SAR_matrix", class(m)),
brick_extent = extent,
brick_crs = crs,
brick_dim = brick_dim,
brick_names = brick_names)
return(m)
}
SAR_matrix()
#' @param m
#' @param extent
#' @param crs
#' @param dim
#' @param names
#'
#' @return
#' @export
#'
#' @examples
SAR_matrix <- function(
m = matrix(0, 3, 3), extent = raster::extent(raster::raster()),
crs = "+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0",
brick_dim = c(dim(m),1), brick_names = names(m)) {
m <- structure(
m, class = c("SAR_matrix", class(m)),
brick_extent = extent,
brick_crs = crs,
brick_dim = brick_dim,
brick_names = brick_names)
return(m)
}
SAR_matrix()
?raster::crs
dim(vector(2))
length(vector(2))
length(ve(2))
length(c(1,2,3))
#' @return
#' An SAR_matrix object; a specialisation
#' of class matrix that includes geospatial
#' and brick dimension attributes.
#'
#' @export
#'
#' @examples
#' SAR_matrix()
#'
SAR_matrix <- function(
m = matrix(0, 3, 3), extent = raster::extent(raster::raster()),
crs = "+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0",
brick_dim = c(dim(m),1), brick_names = paste0("layer.",1:brick_dim[3])) {
m <- structure(
m, class = c("SAR_matrix", class(m)),
brick_extent = extent,
brick_crs = crs,
brick_dim = brick_dim,
brick_names = brick_names)
return(m)
}
SAR_matrix()
testthat::expect_gt(2, 1)
testthat::expect_gt(2, 2)
assert
?assert
?assert_that
m <- matrix(0, 3, 4)
ncol(m)
factor(100)
factorise(100)
factors(100)
divisors(100)
class(raster::extent(raster::raster()))
class(raster::extent(raster::raster())) == raster::extent(raster::raster())
library(rsar)
filename_cc <- system.file(
"extdata", "MG_CC_sub_norm_testclip.tif", package="rsar")
filename_vh <- system.file(
"extdata", "MG_VH_sub_norm_testclip.tif", package="rsar")
cc_m1 <- load_SAR_matrix(filename_cc)
cc_b1 <- raster::brick(filename_cc)
cc_m2 <- brick_to_matrix(cc_b1)
cc_b2 <- matrix_to_brick(cc_m1)
vh_m1 <- load_SAR_matrix(filename_vh)
vh_b1 <- raster::brick(filename_vh)
filename_cc <- system.file(
"extdata", "MG_CC_sub_norm_testclip.tif", package="rsar")
filename_vh <- system.file(
"extdata", "MG_VH_sub_norm_testclip.tif", package="rsar")
cc_m1 <- load_SAR_matrix(filename_cc)
cc_b1 <- raster::brick(filename_cc)
cc_m2 <- brick_to_matrix(cc_b1)
cc_b2 <- matrix_to_brick(cc_m1)
attr(cc_m2, "brick_dim")
attr(cc_m1, "brick_dim")
library(rsar)
cc_m1 <- load_SAR_matrix(filename_cc)
cc_b1 <- raster::brick(filename_cc)
cc_m2 <- brick_to_matrix(cc_b1)
library(rsar)
cc_m2 <- brick_to_matrix(cc_b1)
cc_m1 <- load_SAR_matrix(filename_cc)
cc_b1 <- raster::brick(filename_cc)
cc_m2 <- brick_to_matrix(cc_b1)
cc_b2 <- matrix_to_brick(cc_m1)
attr(cc_m1, "brick_dim")
attributes(cc_m1)
library(rsar)
?SAR_matrix
filename_cc <- system.file(
"extdata", "MG_CC_sub_norm_testclip.tif", package="rsar")
filename_vh <- system.file(
"extdata", "MG_VH_sub_norm_testclip.tif", package="rsar")
cc_m1 <- load_SAR_matrix(filename_cc)
cc_m1
rm(list = ls())
filename_cc <- system.file(
"extdata", "MG_CC_sub_norm_testclip.tif", package="rsar")
filename_vh <- system.file(
"extdata", "MG_VH_sub_norm_testclip.tif", package="rsar")
cc_m1 <- load_SAR_matrix(filename_cc)
cc_b1 <- raster::brick(filename_cc)
cc_m2 <- brick_to_matrix(cc_b1)
cc_b2 <- matrix_to_brick(cc_m1)
attributes(cc_m1)
cc_m1 <- load_SAR_matrix(filename_cc)
cc_b1 <- raster::brick(filename_cc)
cc_m2 <- brick_to_matrix(cc_b1)
cc_b2 <- matrix_to_brick(cc_m1)
attributes(cc_m1)
attr(cc_m1, "brick_dim")
vh_m1 <- load_SAR_matrix(filename_vh)
vh_b1 <- raster::brick(filename_vh)
vh_m2 <- brick_to_matrix(vh_b1)
vh_b2 <- matrix_to_brick(vh_m1)
dim(cc_m1)
matrix(0, 3, 3)
matrix(0, 4, 3)
library(rsar)
as.integer(3.6)
assertthat::assert_that( is.integer(1) )
assertthat::assert_that( is.integer(1L) )
length(1)
length(1L)
library(rsar)
library(rsar)
library(rsar)
library(rsar)
rcmdcheck::rcmdcheck()
rcmdcheck::rcmdcheck()
library(rsar)
