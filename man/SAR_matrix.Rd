% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/class.R
\name{SAR_matrix}
\alias{SAR_matrix}
\title{SAR_matrix}
\usage{
SAR_matrix(m = matrix(0, 4, 3),
  extent = raster::extent(raster::raster()),
  crs = "+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0",
  brick_nrow = 2, brick_ncol = nrow(m)/brick_nrow,
  brick_names = paste0("layer.", 1:ncol(m)),
  brick_na_indices = integer(0), attr_src)
}
\arguments{
\item{m}{A matrix with raster intensities.}

\item{extent}{An \code{\link[raster]{extent}} object.}

\item{crs}{A string specifying the coordinate reference system
(as in \code{\link[raster]{crs}}).}

\item{brick_nrow}{A single integer specifying the number of rows
(in pixels) of each band in the brick. Note that
\code{brick_nrow * brick_nrow} must equal \code{nrow(m)}.
The default value of 2 is for demonstration and
is unlikely to be useful.}

\item{brick_ncol}{A single integer specifying the number of
columns (in pixels) of each band in the brick. Note that
\code{brick_nrow * brick_nrow} must equal \code{nrow(m)}.}

\item{brick_names}{A vector of length \code{ncol(m)}
labelling each band in the raster \code{\link[raster]{brick}}.}

\item{brick_na_indices}{Integer vector giving row indices for locations
where \code{NA} pixels exist in the
corresponding raster \code{\link[raster]{brick}}.}

\item{attr_src}{Either another \code{SAR_matrix} or a
raster \code{\link[raster]{brick}}. If this argument is not
missing then all other arguments to this function will be sourced
from \code{attr_src} (except for the argument \code{brick_names},
since \code{attr_src} is understood to possible have fewer
columns than \code{m}).}
}
\value{
A \code{SAR_matrix} object; a specialisation
of class matrix that includes geospatial
and brick dimension attributes.
}
\description{
Construct a \code{SAR_matrix} object from a matrix \code{m}.
Each column of a \code{SAR_matrix} corresponds to a band in
a SAR raster brick (i.e., to the depth dimension),
and each row corresponds to a pixel.
}
\examples{
SAR_matrix()

}
